<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>My Life</title>
  <subtitle>纸上得来终觉浅，绝知此事要躬行</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://aqianduan.github.io/"/>
  <updated>2017-03-13T06:55:34.065Z</updated>
  <id>http://aqianduan.github.io/</id>
  
  <author>
    <name>Brian.M</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>js实现瀑布流</title>
    <link href="http://aqianduan.github.io/blog/2017/03/13/js%E5%AE%9E%E7%8E%B0%E7%80%91%E5%B8%83%E6%B5%81/"/>
    <id>http://aqianduan.github.io/blog/2017/03/13/js实现瀑布流/</id>
    <published>2017-03-13T06:35:52.000Z</published>
    <updated>2017-03-13T06:55:34.065Z</updated>
    
    <content type="html"><![CDATA[<hr>
<p>在百度搜索图片时候看到的效果应该用的是这种写法</p>
<a id="more"></a>
<ul>
<li><p>先上效果:<a href="https://cdn.rawgit.com/Aqianduan/JS-/bf8b82e8/%E7%80%91%E5%B8%83%E6%B5%81.html" target="_blank" rel="external">瀑布流</a></p>
</li>
<li><p>具体代码我传在<a href="https://github.com/Aqianduan/JS-" target="_blank" rel="external">github</a>上</p>
</li>
</ul>
<p>此方法主要是利用了每张图片的高度不同。<br>先获取随机图片的高度值，遍历一下找到最小值，然后添加进去<br>每次鼠标滑动时候，添加onscroll事件，确保划不到浏览器底部</p>
<hr>
<blockquote>
<p>文章标题：<a href="http://aqianduan.github.io/blog/2017/03/13/js实现瀑布流/" title="js实现瀑布流">js实现瀑布流</a><br>文章作者：<a href="https://aqianduan.github.io/" title="Brian.M">Brian.M</a><br>有问题或者建议欢迎在下方评论。欢迎转载、引用，但希望标明出处，感激不尽(●’◡’●)</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;在百度搜索图片时候看到的效果应该用的是这种写法&lt;/p&gt;
    
    </summary>
    
      <category term="JS" scheme="http://aqianduan.github.io/categories/JS/"/>
    
    
      <category term="瀑布流JS" scheme="http://aqianduan.github.io/tags/%E7%80%91%E5%B8%83%E6%B5%81JS/"/>
    
  </entry>
  
  <entry>
    <title>圣杯布局</title>
    <link href="http://aqianduan.github.io/blog/2017/03/13/%E5%9C%A3%E6%9D%AF%E5%B8%83%E5%B1%80/"/>
    <id>http://aqianduan.github.io/blog/2017/03/13/圣杯布局/</id>
    <published>2017-03-13T06:12:53.000Z</published>
    <updated>2017-03-13T06:12:54.019Z</updated>
    
    <content type="html"><![CDATA[<hr>
<a id="more"></a>
<hr>
<blockquote>
<p>文章标题：<a href="http://aqianduan.github.io/blog/2017/03/13/圣杯布局/" title="圣杯布局">圣杯布局</a><br>文章作者：<a href="http://www.cylong.com/about/" title="cylong" target="_blank" rel="external">cylong</a><br>文章链接：<a href="http://aqianduan.github.io/blog/2017/03/13/圣杯布局/" title="圣杯布局">http://aqianduan.github.io/blog/2017/03/13/圣杯布局/</a><br>有问题或者建议欢迎在下方评论。欢迎转载、引用，但希望标明出处，感激不尽(●’◡’●)</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS3布局</title>
    <link href="http://aqianduan.github.io/blog/2017/03/12/CSS3%E5%B8%83%E5%B1%80/"/>
    <id>http://aqianduan.github.io/blog/2017/03/12/CSS3布局/</id>
    <published>2017-03-12T12:58:24.000Z</published>
    <updated>2017-03-13T06:12:31.743Z</updated>
    
    <content type="html"><![CDATA[<p>两种布局方式<br><a id="more"></a></p>
<h1 id="弹性布局：flexbox"><a href="#弹性布局：flexbox" class="headerlink" title="弹性布局：flexbox"></a>弹性布局：flexbox</h1><p>优点：<br>1 适应性强，在做不同屏幕分辨率的界面时非常实用<br>2 可以随意按照宽度、比例划分元素的宽高<br>3 可以轻松改变元素的显示顺序<br>4 弹性布局实现快捷，易维护</p>
<p>display : box； 将一个元素的子元素以弹性布局进行布局<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">display : box；</div><div class="line">display : flexbox；    </div><div class="line">display : flex；</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">box-orient：horizontal(横向) | vertical(竖向) | inherit(继承)   子元素的排列方式</div><div class="line">box-direction：normal(正常 ) | reverse(反向) | inherit(继承)  子元素的排列顺序</div><div class="line">box-align：start(靠左) | end(靠右) | center(居中)   子元素的对齐方式</div><div class="line">box-pack：start(顶部) | end(底部) | center(居中)   子元素的对齐方式</div></pre></td></tr></table></figure>
<p>子元素如何分配剩余空间<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">box-flex：number ;</div></pre></td></tr></table></figure></p>
<p>在默认情况下，盒子并不具有弹性。如果对box-flex的属性值进行了设置，则变得富有弹性<br>如果没有固定盒子<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">子盒大小  = 父盒大小 * (子盒box-flex值 / 所有子盒box-flex值之和)</div></pre></td></tr></table></figure></p>
<blockquote><p>属性总结:<br>display : box ;      将一个元素的子元素以弹性布局进行布局<br>box-orient：子元素的排列方式（横向或者竖向）<br>box-direction：子元素的排列顺序<br>box-align：子元素的对齐方式<br>box-pack：子元素的对齐方式<br>box-flex：子元素如何分配剩余空间（在子元素设置）<br>box-ordinal-group：子元素显示顺序（在子元素设置）<br>扩展：<a href="http://segmentfault.com/a/1190000000707526" target="_blank" rel="external">http://segmentfault.com/a/1190000000707526</a></p>
</blockquote>
<h1 id="响应式布局"><a href="#响应式布局" class="headerlink" title="响应式布局"></a>响应式布局</h1><p>响应式布局是将已有的开发技巧（弹性网格布局、弹性图片、媒体和媒体查询）整合起来，命名为响应式网页设计，是一种针对任意设备对网页内容进行“完美”布局的一种显示机制。<br>简言之，是一个网站能够兼容多个终端——而不是为每个终端做一个特定的版本。</p>
<h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><p>多终端视觉和操作体验风格统一<br>兼容当前及未来新设备<br>节约了开发成本，维护成本也降低很多</p>
<h2 id="劣势"><a href="#劣势" class="headerlink" title="劣势"></a>劣势</h2><p>兼容性：低版本浏览器兼容性有问题<br>移动带宽流量：相比较手机定制网站，流量稍大，但比较加载一个完整pc端网站显然是小得多<br>代码累赘，会出现隐藏无用的元素，加载时间加长<br>在设计的初期就要考虑的页面如何在多终端显示，兼容各种设备工作量大</p>
<h2 id="响应式实现"><a href="#响应式实现" class="headerlink" title="响应式实现"></a>响应式实现</h2><p>1、CSS3-media Query（媒体查询）<br>2、 javascript<br>3、第三方开源框架 如：Bootstrap</p>
<h2 id="css语法"><a href="#css语法" class="headerlink" title="css语法"></a>css语法</h2><h3 id="外联CSS语法"><a href="#外联CSS语法" class="headerlink" title="外联CSS语法"></a>外联CSS语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;link rel=<span class="string">"stylesheet"</span> media=<span class="string">"mediatype and|not|only (media feature)"</span> href=<span class="string">"mystylesheet.css"</span>&gt;</div></pre></td></tr></table></figure>
<p>媒体类型：mediatype<br>关键字：and|not|only<br>媒体特征：media feature</p>
<h3 id="内嵌样式的语法"><a href="#内嵌样式的语法" class="headerlink" title="内嵌样式的语法"></a>内嵌样式的语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">@media mediatype and|not|only (media feature) &#123; ... &#125;</div></pre></td></tr></table></figure>
<p>媒体类型：mediatype<br>关键字：and|not|only<br>媒体特征：media feature</p>
<hr>
<blockquote>
<p>文章标题：<a href="http://aqianduan.github.io/blog/2017/03/12/CSS3布局/" title="CSS3布局">CSS3布局</a><br>文章作者：<a href="https://aqianduan.github.io/" title="Brian.M">Brian.M</a><br>有问题或者建议欢迎在下方评论。欢迎转载、引用，但希望标明出处，感激不尽(●’◡’●)</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;两种布局方式&lt;br&gt;
    
    </summary>
    
      <category term="CSS3" scheme="http://aqianduan.github.io/categories/CSS3/"/>
    
    
      <category term="CSS3布局" scheme="http://aqianduan.github.io/tags/CSS3%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>移动端适配</title>
    <link href="http://aqianduan.github.io/blog/2017/03/12/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/"/>
    <id>http://aqianduan.github.io/blog/2017/03/12/移动端适配/</id>
    <published>2017-03-12T10:06:43.000Z</published>
    <updated>2017-03-12T10:42:42.515Z</updated>
    
    <content type="html"><![CDATA[<hr>
<p>关于移动端屏幕适配的方法</p>
<a id="more"></a>
<h1 id="自适应屏幕的JS代码"><a href="#自适应屏幕的JS代码" class="headerlink" title="自适应屏幕的JS代码"></a>自适应屏幕的JS代码</h1><p>移动端单位用rem来做<br>将Js代码引入html中：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">function setPage () &#123;</div><div class="line">		var HTML=document.getElementsByTagName(&apos;html&apos;)[0];</div><div class="line">		var deviceWidth=document.documentElement.clientWidth;</div><div class="line">		var scale=deviceWidth/640;//psd图上宽度</div><div class="line">		HTML.style.fontSize=scale*100+&apos;px&apos;;</div><div class="line">	&#125;</div><div class="line">	setPage ()</div><div class="line"></div><div class="line">	window.onresize=function ()&#123;</div><div class="line">		setPage ()</div><div class="line">	&#125;</div><div class="line">	// 640  100px</div></pre></td></tr></table></figure></p>
<p>100px = 1rem</p>
<hr>
<blockquote>
<p>文章标题：<a href="http://aqianduan.github.io/blog/2017/03/12/移动端适配/" title="移动端适配">移动端适配</a><br>文章作者：<a href="https://aqianduan.github.io/" title="Brian.M">Brian.M</a><br>有问题或者建议欢迎在下方评论。欢迎转载、引用，但希望标明出处，感激不尽(●’◡’●)</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;关于移动端屏幕适配的方法&lt;/p&gt;
    
    </summary>
    
      <category term="移动端" scheme="http://aqianduan.github.io/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
    
      <category term="JS" scheme="http://aqianduan.github.io/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>H5</title>
    <link href="http://aqianduan.github.io/blog/2017/03/12/H5%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    <id>http://aqianduan.github.io/blog/2017/03/12/H5的新特性/</id>
    <published>2017-03-12T08:15:51.000Z</published>
    <updated>2017-03-12T10:02:26.068Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">“没有人愿意使用Flash，全球已经开始步入H5时代”<br>    —乔布斯</blockquote>


<a id="more"></a>
<p>2014年10月29日，万维网联盟泪流满面地宣布，经过几乎8年的艰辛努力，HTML5标准规范终于最终制定完成了，并已公开发布。这一刻web世界已经发生了巨大的改变。<br>HTML5代表着Web发展的未来方向。无论大家身为开发人员还是高级用户，关于这一Web编程新基础的种种态势都得到了各位的关注。时至今日，网络银行、实时视频聊天以及短视频共享已经成为Web领域的立足根基，而接下来还将有更多极具突破性的趋势及成果不断涌现。</p>
<h1 id="HTML5的新特性"><a href="#HTML5的新特性" class="headerlink" title="HTML5的新特性"></a>HTML5的新特性</h1><p>增加了新的语义化标签：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;header&gt;-----定义页眉</div><div class="line">&lt;nav&gt;---------定义导航</div><div class="line">&lt;article&gt;------定义外部的内容</div><div class="line">&lt;section&gt;-----定义章节、区段</div><div class="line">&lt;aside&gt;-------定义当前页面或文章的附属信息部分&lt;footer&gt;------定义页脚</div><div class="line">&lt;hgroup&gt;-----定义网页标题元素（h1-h6）的组合</div><div class="line">&lt;figure&gt;-------定义媒介内容的分组，以及它们的标题</div><div class="line">&lt;figcaption&gt;--定义 figure 元素的标题</div></pre></td></tr></table></figure></p>
<h2 id="增添了input的属性、类型："><a href="#增添了input的属性、类型：" class="headerlink" title="增添了input的属性、类型："></a>增添了input的属性、类型：</h2><p>input新属性：<br>placeholder: 占位符，输入框提示信息<br>required: 该input为必填项<br>autofocus: 在页面加载时，域自动地获得焦点<br>pattern: 正则验证  如:  pattern=”[0-9]{7,12}”<br>min/max: input能输入的最小/最大字节的长度<br>step: 针对number和range类型，每次递增step的值<br>list: 指定一个datalist，作为下拉提示单</p>
<p>input的新类型：<br>email: 提交表单时检测值是否是一个电子邮件格式<br>url: 提交表单时检测值是否是一个url格式<br>date: 年-月-日格式的控件<br>time: 时:分格式的控件<br>datetime: 年-月-日 时:分 格式的控件（UTC时间）<br>datetime-local: 年-月-日 时:分 格式的控件（本地时间）<br>month: 年-月格式的控件<br>week: 年-周数格式的控件<br>number: 数字输入框<br>range: 选择区域<br>tel: 电话输入框<br>search: 用于搜索<br>color: 调用系统选色器</p>
<h2 id="强化了form表单"><a href="#强化了form表单" class="headerlink" title="强化了form表单"></a>强化了form表单</h2><h1 id="video出现果断抛弃flash"><a href="#video出现果断抛弃flash" class="headerlink" title="video出现果断抛弃flash"></a>video出现果断抛弃flash</h1><p>以往的网络如果播放视频等，需要flash插件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;object&gt; 标签的作用是在 HTML 页面中嵌入多媒体元素</div><div class="line">&lt;object data=<span class="string">"1.swf"</span> width=<span class="string">"400"</span>&gt;&lt;/object&gt;</div><div class="line"></div><div class="line">&lt;embed&gt; 标签的作用是在 HTML 页面中嵌入多媒体元素</div><div class="line">&lt;embed src=<span class="string">"1.swf"</span> width=<span class="string">"400"</span>&gt;</div></pre></td></tr></table></figure></p>
<h2 id="flash存在的问题"><a href="#flash存在的问题" class="headerlink" title="flash存在的问题"></a>flash存在的问题</h2><p>如果浏览器不支持flash那么视频就无法播放<br>iPad 和 iPhone 不能显示 Flash 视频<br>将视频转换为其他格式，仍然不能在所有浏览器中播放<br>目前安卓4.4也抛弃了flash……</p>
<h2 id="HTML5的video标签"><a href="#HTML5的video标签" class="headerlink" title="HTML5的video标签"></a>HTML5的video标签</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;video width=<span class="string">" "</span> height=<span class="string">""</span> src=<span class="string">""</span>&gt; &lt;/video&gt;</div></pre></td></tr></table></figure>
<p>width、height属性：<br>设置媒体元素的大小，单位为像素；<br>省略该属性，则使用播放源文件的大小；<br>仅设置宽度值，将根据播放源文件的长宽比例自动生成一个与之对应的高度值。</p>
<p>src 属性：指定播放文件的URL。</p>
<p>video标签的出现可以让我们不用考虑用户是否有flash<br>video支持的视频格式：MP4、WebM、Ogg<br>Ps：并不是所有的浏览器都支持MP4格式<br>解决方法：<br>视频 mp4 格式适用于IE、chrome 和 Safari，要确保视频在Firefox与Opera中也能够正常播放需要source元素<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;video src=<span class="string">""</span> width=<span class="string">""</span> height=<span class="string">""</span>&gt;</div><div class="line">	&lt;<span class="built_in">source</span> src=<span class="string">"move.ogg"</span> <span class="built_in">type</span>=<span class="string">"video/ogg"</span>&gt;&lt;/<span class="built_in">source</span>&gt;</div><div class="line">	&lt;<span class="built_in">source</span> src=<span class="string">"move.mp4"</span> <span class="built_in">type</span>=<span class="string">"video/mp4"</span>&gt;&lt;/<span class="built_in">source</span>&gt;</div><div class="line">	你的浏览器不支持视频播放</div><div class="line">&lt;/video&gt;</div></pre></td></tr></table></figure></p>
<h2 id="video的常用属性"><a href="#video的常用属性" class="headerlink" title="video的常用属性"></a>video的常用属性</h2><p>controls 属性：用户将鼠标悬停至正在播放的视频时，显示工具条；一但移开，工具条件就会隐藏<br>autoplay 属性：一旦视频就绪马上开始自动播放。<br>loop 属性:视频结束后将重新开始播放。<br>muted 属性: 如果出现该属性，则输出为静音。<br>poster 属性:将在视频文件播放前显示图片（广告图片）。</p>
<p>preload 属性：是否在页面加载后载入视频 ( 预加载 )    如有autoplay属性则进行忽略<br>Ps：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">preload 可能值：</div><div class="line">   auto （默认） :  当页面加载后载入整个视频</div><div class="line">   metadata :  只加载播放文件的元信息（如：尺寸、持续时间、第一帧信息、曲目列表等） </div><div class="line">   none :  当页面加载后不载入视频</div></pre></td></tr></table></figure></p>
<h2 id="video常用属性方法"><a href="#video常用属性方法" class="headerlink" title="video常用属性方法"></a>video常用属性方法</h2><p>duration：整个媒体文件的播放时长，以s为单位。<br>currentTime：当前播放时间，以s为单位。<br>paused：如果媒体文件当前被暂停，则返回true。<br>load ( ) 方法：用于重新加载src指定的媒体文件。<br>pause ( ) 方法：用于暂停正在播放中的媒体文件。<br>play ( ) 方法：用于播放媒体文件。</p>
<h2 id="video的常用事件"><a href="#video的常用事件" class="headerlink" title="video的常用事件"></a>video的常用事件</h2><p>error————–请求数据时遇到错误时触发<br>play—————开始播放时触发<br>pause————-暂停时触发<br>timeupdate——-播放时间改变时触发<br>ended————-播放结束时触发<br>volumechange—-音量改变时触发<br>Ps：可以使用addEventListener 方法来对事件发生进行监听。</p>
<h1 id="audio出现了"><a href="#audio出现了" class="headerlink" title="audio出现了"></a>audio出现了</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;audio  src=<span class="string">""</span> controls&gt; &lt;/audio&gt;</div><div class="line">     src：音乐的URL</div><div class="line">     controls：浏览器自带的控制条</div><div class="line">示例：&lt;audio src=<span class="string">"01.mp3"</span> controls&gt;&lt;/audio&gt;</div></pre></td></tr></table></figure>
<h2 id="audio支持情况"><a href="#audio支持情况" class="headerlink" title="audio支持情况"></a>audio支持情况</h2><p>目前audio元素支持三种格式：MP3、Wav、Ogg</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">浏览器			MP3		Wav		Ogg</div><div class="line">IE 9+ 			yes		no		no</div><div class="line">Chrome 6+ 		yes		yes		yes</div><div class="line">Firfox 3.6+ 		no		yes		yes</div><div class="line">Safari 5+ 		yes		yes		no</div><div class="line">Oprea 10+ 		no		yes		yes</div></pre></td></tr></table></figure>
<h2 id="audio常用属性"><a href="#audio常用属性" class="headerlink" title="audio常用属性"></a>audio常用属性</h2><p>audio的常用属性和方法与video基本一样<br>如：play( ) 、pause( ) 、autoplay、controls……..</p>
<h1 id="Canvas"><a href="#Canvas" class="headerlink" title="Canvas"></a>Canvas</h1><p>canvas 标签是 HTML 5 中的新标签。<br>canvas的应用使前端工程师们更像是艺术家。</p>
<h2 id="canvas标签的基本结构"><a href="#canvas标签的基本结构" class="headerlink" title="canvas标签的基本结构"></a>canvas标签的基本结构</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;canvas id=<span class="string">"myCanvas"</span> width=<span class="string">"200"</span> height=<span class="string">"200"</span>&gt;&lt; /canvas&gt;</div></pre></td></tr></table></figure>
<p>canvas元素自身有两个属性：width和height，除此之外，canvas还拥有所有主要的HTML5属性，比如说class、id和 name等。id属性被用在上面所示的代码中，JavaScript使用这里创建的canvas的id来表示要在上面绘画的画布。JavaScript使用document.getElementById()方法来确定正确的画布，如下面代码所示：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var cvs = document.getElementById(<span class="string">"myCanvas"</span>);</div></pre></td></tr></table></figure></p>
<p>Ps:IE 6 7 8不支持 <canvas>标签</canvas></p>
<p>每个画布都必须要有一个context（上下文）的定义，如下面代码所示。就目前的情况来说，官方规范只承认一个2D环境：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var ctx = cvs.getContext(<span class="string">"2d"</span>);</div></pre></td></tr></table></figure></p>
<p>在标识画布并指明了它的上下文之后，就可以开始绘画了</p>
<h2 id="绘制图形的流程"><a href="#绘制图形的流程" class="headerlink" title="绘制图形的流程"></a>绘制图形的流程</h2><p>哈喽~~<br>告诉大家我要开始绘画了<br>确定要绘制的起点<br>……<br>确定要绘制的终点<br>路径绘制结束<br>确定画笔的样式<br>使用设置好的画笔描边或者填色</p>
<p>现在用代码实现刚刚说的<br>首先我们要开始一个路径<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctx.beginPath();</div></pre></td></tr></table></figure></p>
<p>路径移到画布中指定的点，也就是我们的起点<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctx.moveTo(x,y);</div></pre></td></tr></table></figure></p>
<p>然后添加一个新点，画线<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctx.lineTo(x,y);</div></pre></td></tr></table></figure></p>
<p>画完了要关闭路径<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctx.closePath();</div></pre></td></tr></table></figure></p>
<p>开始填充颜色<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctx.fillStyle</div></pre></td></tr></table></figure></p>
<p>开始填充绘制好的路径<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctx.fill()</div></pre></td></tr></table></figure></p>
<p>设置画线的宽度<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctx.lineWidth</div></pre></td></tr></table></figure></p>
<p>用来设置描边颜色<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctx.strokeStyle</div></pre></td></tr></table></figure></p>
<p>绘制已定义好的路径<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctx.stroke()</div></pre></td></tr></table></figure></p>
<p>ok，画图完毕</p>
<h2 id="绘制矩形"><a href="#绘制矩形" class="headerlink" title="绘制矩形"></a>绘制矩形</h2><p>rect(x,y,w,h)：x、y为起始坐标，w、h为矩形的宽、高<br>支持这么写：<br>ctx.fillRect(x,y,w,h)   及   ctx.strokeRect(x,y,w,h)</p>
<h2 id="绘制圆形"><a href="#绘制圆形" class="headerlink" title="绘制圆形"></a>绘制圆形</h2><p>arc(x,y,r,sa,ea,true/false)：<br>x、y为圆心坐标，r为半径，<br>sa、ea分别为起始角度和结束角度，<br>true是逆时针画圆，false是顺时针画圆；<br>360度角即2PI弧度，1度就是2PI/360=PI/180弧度，<br>90度就是2PI/360*90=PI/2弧度(其他的角度自行计算)</p>
<h2 id="绘制文字"><a href="#绘制文字" class="headerlink" title="绘制文字"></a>绘制文字</h2><p>方法：<br>fillText(text,x,y,maxWidth): 填充绘制<br>text表示文字      x、y为坐标<br>maxWidth可选，为文字最大宽度，防止文字溢出</p>
<p>strokeText(text,x,y,maxWidth): 描边绘制<br>text表示文字      x、y为坐标<br>maxWidth可选，为文字最大宽度，防止文字溢出；</p>
<h3 id="常用的属性"><a href="#常用的属性" class="headerlink" title="常用的属性"></a>常用的属性</h3><p>font 文本内容的当前字体属性<br>示例: ctx.font = ‘bold 60px 微软雅黑’;</p>
<p>textAlign 文本内容的当前对齐方式<br>示例: ctx.textAlign=“left/center/right”; </p>
<p>textBaseline 绘制文本时使用的当前文本基线<br>示例: ctx.textBaseline=“ top/middle/ bottom ”;</p>
<h2 id="清除画布"><a href="#清除画布" class="headerlink" title="清除画布"></a>清除画布</h2><p>既然能够绘制图形，我们也能清除<br>清除canvas方法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctx.clearRect(x,y,width,height)</div></pre></td></tr></table></figure></p>
<p>x : 清除起点横坐标<br>y : 清除起点纵坐标<br>width : 清除长度<br>height : 清除高度<br>清除画布：<br>ctx.clearRect(0,0,cvs.width,cvs.height);</p>
<h2 id="图形的组合方式"><a href="#图形的组合方式" class="headerlink" title="图形的组合方式"></a>图形的组合方式</h2><p>新画图形是压在原图形上或者原图覆盖新图形等等一系列新图与原图形的结合方式叫做图形的组合，大概分为十一种方式。<br>比如：显示新图覆盖原图、或者只显示原图和新图相重叠部分等等。</p>
<p>globalCompositeOperation属性  控制图形的组合方式</p>
<p>这个属性归getContext(‘2d’)所创建的对象所有</p>
<hr>
<blockquote>
<p>文章标题：<a href="http://aqianduan.github.io/blog/2017/03/12/H5的新特性/" title="H5">H5</a><br>文章作者：<a href="https://aqianduan.github.io/" title="Brian.M">Brian.M</a><br>有问题或者建议欢迎在下方评论。欢迎转载、引用，但希望标明出处，感激不尽(●’◡’●)</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;“没有人愿意使用Flash，全球已经开始步入H5时代”&lt;br&gt;    —乔布斯&lt;/blockquote&gt;
    
    </summary>
    
      <category term="HTML5" scheme="http://aqianduan.github.io/categories/HTML5/"/>
    
    
      <category term="HTML5" scheme="http://aqianduan.github.io/tags/HTML5/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://aqianduan.github.io/blog/2017/03/12/hello-world/"/>
    <id>http://aqianduan.github.io/blog/2017/03/12/hello-world/</id>
    <published>2017-03-12T05:54:08.336Z</published>
    <updated>2017-03-12T05:54:08.336Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
